{"version":3,"sources":["components/data/Address.jsx","components/data/Image.jsx","components/data/Area.jsx","components/data/Price.jsx","components/HouseCard.jsx","components/TemplatePicker.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Address","react_default","a","createElement","className","this","props","address","concat","children","Component","Image","src","image","alt","Area","area","Price","num","str","toString","split","length","replace","join","Fragment","formatPrice","price","HouseCard","state","template","component","field","house","images","full_address","obj","_this2","map","getTempFromJson","Image_Image","key","getProp","Address_Address","Price_Price","Area_Area","temp","_this3","reactstrap_es","md","getTemplate","TemplatePicker","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rSelected","template_id","onRadioBtnClick","bind","assertThisInitialized","changeTemp","setState","color","onClick","active","App","houses","templates","selectedTemplate","fetch","then","res","json","data","find","o","id","catch","err","newId","_this4","houseCards","HouseCard_HouseCard","fluid","components_TemplatePicker","onTemplateChange","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bc05307.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Address extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"address  mt-2 mb-2\">\r\n      {this.props.address ? `Адрес: ${this.props.address}` : ''}\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Image extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"img_wrapper\">\r\n        <div className=\"wrap_inner\">\r\n          <div className={`overlay ${(this.props.children ? 'darken':'')}` }></div>\r\n        \t<img src={this.props.image} alt=\"\"/>\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Area extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"area mt-2 mb-2\">\r\n        {this.props.area ? `Площадь: ${this.props.area} кв. м.` : ''}\r\n       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Price extends Component {\r\n\r\n  formatPrice(num) { \r\n        const str = num.toString().split('.');\r\n        if (str[0].length >= 5) {\r\n            str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\r\n        }\r\n        if (str[1] && str[1].length >= 5) {\r\n            str[1] = str[1].replace(/(\\d{3})/g, '$1 ');\r\n        }\r\n        return str.join('.');   \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"price\">${this.formatPrice(this.props.price)}</div>\r\n        {this.props.children}\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Address, Area, Image, Price } from \"./data/index\";\r\nimport { Col, Card } from \"reactstrap\";\r\n\r\nexport default class HouseCard extends Component {\r\n  state = {\r\n    template: [\r\n      {\r\n        component: \"IMAGE\",\r\n        field: \"images\"\r\n      },\r\n      {\r\n        component: \"ADDRESS\",\r\n        field: \"full_address\"\r\n      },\r\n      {\r\n        component: \"PRICE\",\r\n        field: \"price\"\r\n      },\r\n      {\r\n        component: \"AREA\",\r\n        field: \"area\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  getProp(field) {\r\n    switch (field) {\r\n      case \"images\":\r\n        return this.props.house.images[0];\r\n      case \"full_address\":\r\n        return this.props.house.full_address;\r\n      case \"price\":\r\n        return this.props.house.price;\r\n      case \"area\":\r\n        return this.props.house.area;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  getTempFromJson(obj) {\r\n    let children = obj.children\r\n      ? obj.children.map(obj => {\r\n          return this.getTempFromJson(obj);\r\n        })\r\n      : \"\";\r\n    switch (obj.component) {\r\n      case \"IMAGE\":\r\n        return (\r\n          <Image key=\"0\" image={this.getProp(obj.field)} children={children} />\r\n        );\r\n      case \"ADDRESS\":\r\n        return (\r\n          <Address\r\n            key=\"1\"\r\n            address={this.getProp(obj.field)}\r\n            children={children}\r\n          />\r\n        );\r\n      case \"PRICE\":\r\n        return (\r\n          <Price key=\"2\" price={this.getProp(obj.field)} children={children} />\r\n        );\r\n      case \"AREA\":\r\n        return (\r\n          <Area key=\"3\" area={this.getProp(obj.field)} children={children} />\r\n        );\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  getTemplate(temp) {\r\n    const renderedTemp = temp.map(obj => {\r\n      return this.getTempFromJson(obj);\r\n    });\r\n    return renderedTemp;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col md=\"4\">\r\n        <Card className=\"house_card bg-light\">\r\n          {this.getTemplate(this.props.template)}\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, ButtonGroup } from \"reactstrap\";\r\n\r\nclass TemplatePicker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rSelected: this.props.template_id\r\n    };\r\n\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n  }\r\n\r\n  onRadioBtnClick(rSelected) {\r\n    this.props.changeTemp(rSelected);\r\n    this.setState({ rSelected });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"picker sticky-top\">\r\n        <h5>Template Id</h5>\r\n        <ButtonGroup>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => this.onRadioBtnClick(1)}\r\n            active={this.state.rSelected === 1}\r\n          >\r\n            1\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => this.onRadioBtnClick(2)}\r\n            active={this.state.rSelected === 2}\r\n          >\r\n            2\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => this.onRadioBtnClick(3)}\r\n            active={this.state.rSelected === 3}\r\n          >\r\n            3\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TemplatePicker;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport HouseCard from \"./components/HouseCard\";\nimport TemplatePicker from \"./components/TemplatePicker\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      houses: [],\n      templates: [],\n      template_id: 2,\n      selectedTemplate: []\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"https://demo4452328.mockable.io/templates\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ templates: data }, () => {\n          this.setState({\n            selectedTemplate: this.state.templates.find(\n              o => o.id === this.state.template_id\n            ).template\n          });\n        });\n      })\n      .catch(err => {\n        return err;\n      });\n    fetch(\"https://demo4452328.mockable.io/properties\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ houses: data.data });\n      })\n      .catch(err => {\n        return err;\n      });\n  }\n\n  onTemplateChange(newId) {\n    this.setState(\n      {\n        template_id: newId\n      },\n      () => {\n        this.setState({\n          selectedTemplate: this.state.templates.find(\n            o => o.id === this.state.template_id\n          ).template\n        });\n      }\n    );\n  }\n\n  render() {\n    const houseCards = this.state.houses.map(house => (\n      <HouseCard\n        house={house}\n        template={this.state.selectedTemplate}\n        key={house.id}\n      />\n    ));\n    return (\n      <div className=\"App\">\n        <h1 className=\"text-center mt-5\">Test React App</h1>\n        <Container fluid={true}>\n          <Row>\n            <Col md=\"2\" className=\"d-flex flex-column justify-center\">\n              <TemplatePicker\n                changeTemp={this.onTemplateChange.bind(this)}\n                template_id={this.state.template_id}\n              />\n            </Col>\n            <Col md=\"10\">\n              <Row>{houseCards}</Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}